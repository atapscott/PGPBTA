[
  {
    "name": "Angel",
    "stats": [
      {
        "cool": 1,
        "hard": 0,
        "hot": 1,
        "sharp": 2,
        "weird": -1
      },
      {
        "cool": 1,
        "hard": 1,
        "hot": 0,
        "sharp": 2,
        "weird": -1
      },
      {
        "cool": -1,
        "hard": 1,
        "hot": 0,
        "sharp": 2,
        "weird": 1
      },
      {
        "cool": 2,
        "hard": 0,
        "hot": -1,
        "sharp": 2,
        "weird": -1
      }
    ],
    "moves": [
      {
        "name": "Healing Touch",
        "id": "mov_angel_healing_touch",
        "prerequisites": [
          "agent.has_playbook_type('Angel')",
          "object.has_attribute('person')"
        ],
        "tags": ["initiator", "follow_up", "reply"]
      }
    ],
    "hist": {
      "self_turn": {
        "base": 1,
        "history_links": [
          {
            "base": 2,
            "plot": "hist_angel_helped_save_life"
          },
          {
            "base": 2,
            "plot": "hist_angel_companion_witness"
          },
          {
            "base": -1,
            "plot": "hist_angel_opinion_self_destruct"
          }
        ]
      },
      "others_turn": {
        "base": {
          "type": "RAND",
          "values": [
            "+1",
            "-1"
          ]
        },
        "history_links": [
          {
            "base": "+0",
            "plot": "hist_angel_not_willing_involve"
          }
        ]
      }
    }
  },
  {
    "name": "Artist",
    "stats": [
      {
        "cool": 1,
        "hard": -1,
        "hot": 2,
        "sharp": 1,
        "weird": 0
      },
      {
        "cool": 0,
        "hard": 0,
        "hot": 2,
        "sharp": 0,
        "weird": 1
      },
      {
        "cool": -1,
        "hard": 0,
        "hot": 2,
        "sharp": 2,
        "weird": -1
      },
      {
        "cool": 1,
        "hard": 1,
        "hot": 2,
        "sharp": 1,
        "weird": -2
      }
    ],
    "moves": [
      {
        "name": "artful_and_gracious",
        "id": "mov_artist_artful_and_gracious",
        "prerequisites": [
          "agent.has_playbook_type('Artist')",
          "not isinstance(object, PlayerCharacter)",
          "object.has_attribute('person')"
        ],
        "tags": ["initiator", "follow_up", "reply"]
      },
      {
        "name": "arresting_skinner",
        "id": "mov_artist_arresting_skinner",
        "prerequisites": [
          "agent.has_playbook_type('Artist')",
          "object.has_attribute('person')"
        ],
        "tags": ["initiator", "follow_up", "reply", "interference"]
      },
      {
        "name": "hypnotic",
        "id": "mov_artist_hypnotic",
        "prerequisites": [
          "agent.has_playbook_type('Artist')",
          "object.has_attribute('person')"
        ],
        "tags": ["initiator", "follow_up", "reply"]
      }
    ],
    "hist": {
      "self_turn": {
        "base": 0,
        "history_links": [
          {
            "base": 2,
            "plot": "hist_artist_friend"
          },
          {
            "base": 1,
            "plot": "hist_artist_lover"
          },
          {
            "base": -1,
            "plot": "hist_artist_in_love"
          }
        ]
      },
      "others_turn": {
        "base": {
          "type": "RAND",
          "values": [
            "+1",
            "-1"
          ]
        },
        "history_links": []
      }
    }
  },
  {
    "name": "Gun Lugger",
    "stats": [
      {
        "cool": 1,
        "hard": 2,
        "hot": -1,
        "sharp": 1,
        "weird": 0
      },
      {
        "cool": -1,
        "hard": 2,
        "hot": -2,
        "sharp": 1,
        "weird": 2
      },
      {
        "cool": 1,
        "hard": 2,
        "hot": -2,
        "sharp": 2,
        "weird": -1
      },
      {
        "cool": 2,
        "hard": 2,
        "hot": -2,
        "sharp": 0,
        "weird": 0
      }
    ],
    "moves": [
      {
        "name": "Fuck this Shit",
        "id": "mov_gun_lugger_fts",
        "reflexive": "True",
        "prerequisites": [
          "agent.has_playbook_type('Gun Lugger')"
        ],
        "tags": ["follow_up", "reply", "interference"]
      }
    ],
    "hist": {
      "self_turn": {
        "base": 0,
        "history_links": [
          {
            "base": 2,
            "plot": "hist_gun_lugger_battle_brother"
          },
          {
            "base": -2,
            "plot": "hist_gun_lugger_battle_traitor"
          },
          {
            "base": 2,
            "plot": "hist_gun_lugger_attracted"
          }
        ]
      },
      "others_turn": {
        "base": "+0",
        "history_links": [
          {
            "base": "+1",
            "plot": "hist_gun_lugger_smart_companion"
          }
        ]
      }
    }
  },
  {
    "name": "Driver",
    "stats": [
      {
        "cool": 0,
        "hard": -1,
        "hot": 1,
        "sharp": 2,
        "weird": 0
      },
      {
        "cool": 1,
        "hard": 0,
        "hot": 0,
        "sharp": 2,
        "weird": -1
      },
      {
        "cool": 0,
        "hard": 1,
        "hot": -1,
        "sharp": 2,
        "weird": -1
      },
      {
        "cool": 1,
        "hard": -2,
        "hot": 0,
        "sharp": 2,
        "weird": 1
      }
    ],
    "moves": [
      {
        "name": "Eye on the Door",
        "id": "mov_driver_eye_on_the_door",
        "reflexive": "True",
        "prerequisites": [
          "agent.has_playbook_type('Driver')"
        ],
        "tags": ["follow_up", "reply", "interference"]
      },
      {
        "name": "Reputation",
        "id": "mov_driver_reputation",
        "prerequisites": [
          "agent.has_playbook_type('Driver')",
          "object.has_attribute('person')"
        ],
        "tags": ["initiator", "follow_up", "reply"]
      },
      {
        "name": "Daredevil",
        "id": "mov_driver_daredevil",
        "prerequisites": [
          "agent.has_playbook_type('Driver')",
          "isinstance(object, Threat) or isinstance(object, PlayerCharacter)"
        ]
      }
    ],
    "hist": {
      "self_turn": {
        "base": 0,
        "history_links": [
          {
            "base": 2,
            "plot": "hist_driver_travel_together"
          },
          {
            "base": 2,
            "plot": "hist_driver_helped_once"
          }
        ]
      },
      "others_turn": {
        "base": "-1",
        "history_links": []
      }
    }
  }
]